// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import mock "github.com/stretchr/testify/mock"
import models "github.com/maxsakharov/gatlingcomparison/cmd/gc/models"

// Storage is an autogenerated mock type for the Storage type
type Storage struct {
	mock.Mock
}

// DeleteReport provides a mock function with given fields: n
func (_m *Storage) DeleteReport(n string) (bool, error) {
	ret := _m.Called(n)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(n)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(n)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAllReports provides a mock function with given fields:
func (_m *Storage) GetAllReports() ([]models.ReportMetadata, error) {
	ret := _m.Called()

	var r0 []models.ReportMetadata
	if rf, ok := ret.Get(0).(func() []models.ReportMetadata); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.ReportMetadata)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetReports provides a mock function with given fields: n
func (_m *Storage) GetReports(n ...string) ([]models.Report, error) {
	_va := make([]interface{}, len(n))
	for _i := range n {
		_va[_i] = n[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 []models.Report
	if rf, ok := ret.Get(0).(func(...string) []models.Report); ok {
		r0 = rf(n...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Report)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(...string) error); ok {
		r1 = rf(n...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetRport provides a mock function with given fields: n
func (_m *Storage) GetRport(n string) (models.Report, error) {
	ret := _m.Called(n)

	var r0 models.Report
	if rf, ok := ret.Get(0).(func(string) models.Report); ok {
		r0 = rf(n)
	} else {
		r0 = ret.Get(0).(models.Report)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(n)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveReport provides a mock function with given fields: r
func (_m *Storage) SaveReport(r models.ReportMetadata) error {
	ret := _m.Called(r)

	var r0 error
	if rf, ok := ret.Get(0).(func(models.ReportMetadata) error); ok {
		r0 = rf(r)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
